openapi: 3.0.2 # Описание версии OpenAPI. Мы используем самую новую — 3.0.2.
info: # Категория info
  title: 'News portal' # Описание приложения
  version: '0.1' # Версия приложения
paths: # Группа 'paths' со всеми возможными путями
  /news/?page={number_of_page}: # Путь
    get:
      operationId: getPostList
      description: 'List of posts'
      parameters: # Параметры, которые получает сервер от клиента
      - name: number_of_page # Название параметра
        in: path
        required: true
        description: 'Number of page'
        schema:
          type: string
      responses: # Описание ответов от сервера
        '200': # В случае если, код 200
          content: # В каком формате клиент получает данные:
            application/json: # В данном случае, в формате json
              schema: # Формат ответа
                type: array
          description: ''
      tags: # Категория tags — это просто список тегов, чтобы не заблудиться в огромном количестве всевозможных запросов
      - posts
  /news/{id}:
    get:
      operationId: getPostOne
      description: 'Get concrete post by "id"'
      parameters:
        - name: id
          in: path
          required: true
          description: 'post id'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json: # В данном случае, в формате json
              schema: # Формат ответа
                type: array
          description: ''
      tags:
        - posts
  /news/search?title__icontains={title}&category={number_of_category}&added_after={added_after}&page={number_of_page}:
    get:
      operationId: getPostSearch
      description: 'Search news by title, category, date'
      parameters:
        - name: title
          in: path
          required: false
          description: 'title contains'
          schema:
            type: string
        - name: number_of_category
          in: path
          required: false
          description: 'number of category'
          schema:
            type: string
        - name: added_after
          in: path
          required: false
          description: ''
          schema:
            type: string
        - name: number_of_page # Название параметра
          in: path
          required: true
          description: 'Number of page'
          schema:
            type: string
      responses:
        '200':
          content:
            application/json: # В данном случае, в формате json
              schema: # Формат ответа
                type: array
          description: ''
      tags:
        - posts
  /news/news/create:
    post:
      operationId: addNews
      description: 'add fresh news'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/New_post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/New_post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/New_post'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: array
          description: ''
      tags:
        - news
components:
  schemas:
    New_post:
      type: object
      properties:
        author:
          type: integer
        category:
          type: string
          maxLength: 64
        title:
          type: string
          maxLength: 100
          minLength: 30
        text:
          type: string
          minLength: 50
      required:
        - author
        - category
        - title
        - text
